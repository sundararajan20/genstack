W0810 18:55:29.351000 88745 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Starting communication trace for GPT-small
Parallelism: DP=2, TP=4, PP=6, CP=1
Total world size: 48
Starting 48 processes for distributed logging
W0810 18:55:36.508000 88759 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:36.525000 88760 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:36.668000 88773 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:36.845000 88763 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:36.892000 88765 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:36.915000 88766 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:36.973000 88769 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.095000 88768 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.168000 88772 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.179000 88770 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.216000 88775 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.228000 88767 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.249000 88795 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.250000 88762 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.231000 88764 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.302000 88805 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.321000 88778 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.322000 88777 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.326000 88771 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.330000 88803 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.342000 88784 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.395000 88791 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.406000 88789 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.410000 88780 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.417000 88776 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.543000 88787 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.558000 88798 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.571000 88799 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.599000 88779 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.605000 88790 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.625000 88802 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.628000 88807 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.650000 88794 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.651000 88786 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.687000 88804 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.715000 88782 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.748000 88788 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.782000 88792 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.793000 88781 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.768000 88774 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.816000 88783 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.817000 88800 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.844000 88796 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.872000 88801 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:37.896000 88785 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:38.196000 88797 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:38.229000 88806 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:38.630000 88793 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
using world size: 48, data-parallel size: 2, context-parallel size: 1, hierarchical context-parallel sizes: Nonetensor-model-parallel size: 4, encoder-tensor-model-parallel size: 0, pipeline-model-parallel size: 6, encoder-pipeline-model-parallel size: 0
WARNING: Setting args.overlap_p2p_comm and args.align_param_gather to False since non-interleaved schedule does not support overlapping p2p communication and aligned param AG
Number of virtual stages per pipeline stage: None
using torch.float32 for parameters ...
------------------------ arguments ------------------------
  account_for_embedding_in_pipeline_split ......... False
  account_for_loss_in_pipeline_split .............. False
  accumulate_allreduce_grads_in_fp32 .............. False
  adam_beta1 ...................................... 0.9
  adam_beta2 ...................................... 0.999
  adam_eps ........................................ 1e-08
  add_bias_linear ................................. True
  add_position_embedding .......................... True
  add_qkv_bias .................................... True
  adlr_autoresume ................................. False
  adlr_autoresume_interval ........................ 1000
  align_grad_reduce ............................... True
  align_param_gather .............................. False
  app_tag_run_name ................................ None
  app_tag_run_version ............................. 0.0.0
  apply_layernorm_1p .............................. False
  apply_query_key_layer_scaling ................... False
  apply_residual_connection_post_layernorm ........ False
  apply_rope_fusion ............................... False
  async_save ...................................... None
  async_tensor_model_parallel_allreduce ........... True
  attention_backend ............................... AttnBackend.auto
  attention_dropout ............................... 0.1
  attention_softmax_in_fp32 ....................... False
  auto_detect_ckpt_format ......................... False
  barrier_with_L1_time ............................ True
  bert_binary_head ................................ True
  bert_embedder_type .............................. megatron
  bert_load ....................................... None
  bf16 ............................................ False
  bias_dropout_fusion ............................. True
  bias_gelu_fusion ................................ True
  bias_swiglu_fusion .............................. True
  biencoder_projection_dim ........................ 0
  biencoder_shared_query_context_model ............ False
  block_data_path ................................. None
  calc_ft_timeouts ................................ False
  calculate_per_token_loss ........................ False
  check_for_large_grads ........................... False
  check_for_nan_in_loss_and_grad .................. True
  check_for_spiky_loss ............................ False
  check_weight_hash_across_dp_replicas_interval ... None
  ckpt_assume_constant_structure .................. False
  ckpt_convert_format ............................. None
  ckpt_convert_save ............................... None
  ckpt_convert_update_legacy_dist_opt_format ...... False
  ckpt_format ..................................... torch_dist
  ckpt_fully_parallel_load ........................ False
  ckpt_fully_parallel_save ........................ True
  ckpt_fully_parallel_save_deprecated ............. False
  ckpt_step ....................................... None
  classes_fraction ................................ 1.0
  clip_grad ....................................... 1.0
  clone_scatter_output_in_embedding ............... True
  config_logger_dir ............................... 
  consume_next_microbatch ......................... True
  consumed_train_samples .......................... 0
  consumed_valid_samples .......................... 0
  context_parallel_size ........................... 1
  cp_comm_type .................................... ['p2p']
  create_attention_mask_in_dataloader ............. True
  cross_entropy_fusion_impl ....................... native
  cross_entropy_loss_fusion ....................... False
  cuda_graph_scope ................................ full
  cuda_graph_warmup_steps ......................... 3
  data_args_path .................................. None
  data_cache_path ................................. None
  data_parallel_random_init ....................... False
  data_parallel_sharding_strategy ................. no_shard
  data_parallel_size .............................. 2
  data_path ....................................... None
  data_per_class_fraction ......................... 1.0
  data_sharding ................................... True
  dataloader_type ................................. single
  ddp_average_in_collective ....................... False
  ddp_bucket_size ................................. None
  ddp_num_buckets ................................. None
  ddp_pad_buckets_for_high_nccl_busbw ............. False
  decoder_first_pipeline_num_layers ............... None
  decoder_last_pipeline_num_layers ................ None
  decoder_num_layers .............................. None
  decoder_seq_length .............................. None
  decoupled_lr .................................... None
  decoupled_min_lr ................................ None
  decrease_batch_size_if_needed ................... False
  defer_embedding_wgrad_compute ................... False
  deprecated_use_mcore_models ..................... False
  deterministic_mode .............................. False
  dino_bottleneck_size ............................ 256
  dino_freeze_last_layer .......................... 1
  dino_head_hidden_size ........................... 2048
  dino_local_crops_number ......................... 10
  dino_local_img_size ............................. 96
  dino_norm_last_layer ............................ False
  dino_teacher_temp ............................... 0.07
  dino_warmup_teacher_temp ........................ 0.04
  dino_warmup_teacher_temp_epochs ................. 30
  disable_bf16_reduced_precision_matmul ........... False
  disable_mamba_mem_eff_path ...................... False
  disable_straggler_on_startup .................... False
  dist_ckpt_format_deprecated ..................... None
  dist_ckpt_strictness ............................ assume_ok_unexpected
  distribute_saved_activations .................... False
  distributed_backend ............................. gloo
  distributed_timeout_minutes ..................... 10
  embedding_path .................................. None
  empty_unused_memory_level ....................... 0
  enable_cuda_graph ............................... False
  enable_ft_package ............................... False
  enable_gloo_process_groups ...................... True
  enable_msc ...................................... True
  enable_one_logger ............................... True
  encoder_num_layers .............................. 12
  encoder_pipeline_model_parallel_size ............ 0
  encoder_seq_length .............................. 1024
  encoder_tensor_model_parallel_size .............. 0
  end_weight_decay ................................ 0.01
  eod_mask_loss ................................... False
  error_injection_rate ............................ 0
  error_injection_type ............................ transient_error
  eval_interval ................................... 1000
  eval_iters ...................................... 100
  evidence_data_path .............................. None
  exit_duration_in_mins ........................... None
  exit_interval ................................... None
  exit_on_missing_checkpoint ...................... False
  exit_signal_handler ............................. False
  exp_avg_dtype ................................... torch.float32
  exp_avg_sq_dtype ................................ torch.float32
  expert_model_parallel_size ...................... 1
  expert_tensor_parallel_size ..................... 4
  external_cuda_graph ............................. False
  ffn_hidden_size ................................. 3072
  finetune ........................................ False
  first_last_layers_bf16 .......................... False
  flash_decode .................................... False
  fp16 ............................................ False
  fp16_lm_cross_entropy ........................... False
  fp32_residual_connection ........................ False
  fp8 ............................................. None
  fp8_amax_compute_algo ........................... most_recent
  fp8_amax_history_len ............................ 1
  fp8_interval .................................... 1
  fp8_margin ...................................... 0
  fp8_param_gather ................................ False
  fp8_recipe ...................................... delayed
  fp8_wgrad ....................................... True
  global_batch_size ............................... 1024
  grad_reduce_in_bf16 ............................. False
  gradient_accumulation_fusion .................... True
  gradient_reduce_div_fusion ...................... True
  group_query_attention ........................... False
  head_lr_mult .................................... 1.0
  heterogeneous_layers_config_encoded_json ........ None
  heterogeneous_layers_config_path ................ None
  hidden_dropout .................................. 0.1
  hidden_size ..................................... 768
  hierarchical_context_parallel_sizes ............. None
  hybrid_attention_ratio .......................... 0.0
  hybrid_mlp_ratio ................................ 0.0
  hybrid_override_pattern ......................... None
  hysteresis ...................................... 2
  ict_head_size ................................... None
  ict_load ........................................ None
  img_h ........................................... 224
  img_w ........................................... 224
  indexer_batch_size .............................. 128
  indexer_log_interval ............................ 1000
  inference_batch_times_seqlen_threshold .......... -1
  inference_dynamic_batching ...................... False
  inference_dynamic_batching_buffer_guaranteed_fraction  0.2
  inference_dynamic_batching_buffer_overflow_factor  None
  inference_dynamic_batching_buffer_size_gb ....... 40.0
  inference_dynamic_batching_chunk_size ........... 256
  inference_dynamic_batching_max_requests_override  None
  inference_dynamic_batching_max_tokens_override .. None
  inference_max_batch_size ........................ 8
  inference_max_seq_length ........................ 2560
  inference_rng_tracker ........................... False
  init_method_std ................................. 0.02
  init_method_xavier_uniform ...................... False
  init_model_with_meta_device ..................... True
  initial_loss_scale .............................. 4294967296
  is_hybrid_model ................................. False
  iter_per_epoch .................................. 1250
  iterations_to_skip .............................. []
  keep_fp8_transpose_cache_when_using_custom_fsdp . False
  kv_channels ..................................... 64
  kv_lora_rank .................................... 32
  lazy_mpu_init ................................... None
  load ............................................ None
  local_rank ...................................... 0
  log_interval .................................... 1
  log_loss_scale_to_tensorboard ................... True
  log_memory_to_tensorboard ....................... False
  log_num_zeros_in_grad ........................... False
  log_params_norm ................................. False
  log_progress .................................... False
  log_straggler ................................... False
  log_throughput .................................. False
  log_timers_to_tensorboard ....................... False
  log_validation_ppl_to_tensorboard ............... False
  log_world_size_to_tensorboard ................... False
  logging_level ................................... None
  loss_scale ...................................... None
  loss_scale_window ............................... 1000
  lr .............................................. 0.0001
  lr_decay_iters .................................. 1000
  lr_decay_samples ................................ None
  lr_decay_style .................................. cosine
  lr_warmup_fraction .............................. None
  lr_warmup_init .................................. 0.0
  lr_warmup_iters ................................. 0
  lr_warmup_samples ............................... 0
  lr_wsd_decay_iters .............................. None
  lr_wsd_decay_samples ............................ None
  lr_wsd_decay_style .............................. exponential
  main_grads_dtype ................................ torch.float32
  main_params_dtype ............................... torch.float32
  make_vocab_size_divisible_by .................... 50257
  mamba_head_dim .................................. 64
  mamba_num_groups ................................ 8
  mamba_num_heads ................................. None
  mamba_state_dim ................................. 128
  manual_gc ....................................... False
  manual_gc_eval .................................. True
  manual_gc_interval .............................. 0
  mask_factor ..................................... 1.0
  mask_prob ....................................... 0.15
  mask_type ....................................... random
  masked_softmax_fusion ........................... True
  max_position_embeddings ......................... 1024
  max_tokens_to_oom ............................... 12000
  memory_snapshot_path ............................ snapshot.pickle
  merge_file ...................................... dummy_merges.txt
  micro_batch_size ................................ 128
  microbatch_group_size_per_vp_stage .............. None
  mid_level_dataset_surplus ....................... 0.005
  min_loss_scale .................................. 1.0
  min_lr .......................................... 1e-05
  mlp_chunks_for_prefill .......................... 1
  mmap_bin_files .................................. True
  mock_data ....................................... True
  moe_aux_loss_coeff .............................. 0.0
  moe_enable_deepep ............................... False
  moe_expert_capacity_factor ...................... None
  moe_extended_tp ................................. False
  moe_ffn_hidden_size ............................. None
  moe_grouped_gemm ................................ False
  moe_input_jitter_eps ............................ None
  moe_layer_freq .................................. 1
  moe_layer_recompute ............................. False
  moe_pad_expert_input_to_capacity ................ False
  moe_per_layer_logging ........................... False
  moe_permute_fusion .............................. False
  moe_router_bias_update_rate ..................... 0.001
  moe_router_dtype ................................ None
  moe_router_enable_expert_bias ................... False
  moe_router_group_topk ........................... None
  moe_router_load_balancing_type .................. aux_loss
  moe_router_num_groups ........................... None
  moe_router_pre_softmax .......................... False
  moe_router_score_function ....................... softmax
  moe_router_topk ................................. 2
  moe_router_topk_scaling_factor .................. None
  moe_shared_expert_intermediate_size ............. None
  moe_shared_expert_overlap ....................... False
  moe_token_dispatcher_type ....................... allgather
  moe_token_drop_policy ........................... probs
  moe_use_legacy_grouped_gemm ..................... False
  moe_use_upcycling ............................... False
  moe_z_loss_coeff ................................ None
  mrope_section ................................... None
  mscale .......................................... 1.0
  mscale_all_dim .................................. 1.0
  mtp_loss_scaling_factor ......................... 0.1
  mtp_num_layers .................................. None
  multi_latent_attention .......................... False
  nccl_communicator_config_path ................... None
  no_load_optim ................................... True
  no_load_rng ..................................... True
  no_persist_layer_norm ........................... False
  no_save_optim ................................... None
  no_save_rng ..................................... None
  non_persistent_ckpt_type ........................ None
  non_persistent_global_ckpt_dir .................. None
  non_persistent_local_ckpt_algo .................. fully_parallel
  non_persistent_local_ckpt_dir ................... None
  non_persistent_save_interval .................... None
  norm_epsilon .................................... 1e-05
  normalization ................................... LayerNorm
  num_attention_heads ............................. 12
  num_channels .................................... 3
  num_classes ..................................... 1000
  num_dataset_builder_threads ..................... 1
  num_distributed_optimizer_instances ............. 1
  num_experts ..................................... None
  num_layers ...................................... 12
  num_layers_at_end_in_bf16 ....................... 1
  num_layers_at_start_in_bf16 ..................... 1
  num_layers_per_virtual_pipeline_stage ........... None
  num_query_groups ................................ 1
  num_virtual_stages_per_pipeline_rank ............ None
  num_workers ..................................... 2
  object_storage_cache_path ....................... None
  one_logger_async ................................ False
  one_logger_project .............................. megatron-lm
  one_logger_run_name ............................. None
  onnx_safe ....................................... None
  openai_gelu ..................................... False
  optimizer ....................................... adam
  optimizer_cpu_offload ........................... False
  optimizer_offload_fraction ...................... 1.0
  output_bert_embeddings .......................... False
  overlap_cpu_optimizer_d2h_h2d ................... False
  overlap_grad_reduce ............................. False
  overlap_p2p_comm ................................ False
  overlap_p2p_comm_warmup_flush ................... False
  overlap_param_gather ............................ False
  overlap_param_gather_with_optimizer_step ........ False
  override_opt_param_scheduler .................... False
  params_dtype .................................... torch.float32
  patch_dim ....................................... 16
  per_split_data_args_path ........................ None
  perform_initialization .......................... True
  pin_cpu_grads ................................... True
  pin_cpu_params .................................. True
  pipeline_model_parallel_comm_backend ............ None
  pipeline_model_parallel_size .................... 6
  pipeline_model_parallel_split_rank .............. None
  position_embedding_type ......................... learned_absolute
  pretrained_checkpoint ........................... None
  profile ......................................... False
  profile_ranks ................................... [0]
  profile_step_end ................................ 12
  profile_step_start .............................. 10
  q_lora_rank ..................................... None
  qk_head_dim ..................................... 128
  qk_layernorm .................................... False
  qk_pos_emb_head_dim ............................. 64
  query_in_block_prob ............................. 0.1
  rampup_batch_size ............................... None
  rank ............................................ 0
  recompute_granularity ........................... None
  recompute_method ................................ None
  recompute_modules ............................... None
  recompute_num_layers ............................ None
  record_memory_history ........................... False
  relative_attention_max_distance ................. 128
  relative_attention_num_buckets .................. 32
  replication ..................................... False
  replication_factor .............................. 2
  replication_jump ................................ None
  rerun_mode ...................................... disabled
  reset_attention_mask ............................ False
  reset_position_ids .............................. False
  result_rejected_tracker_filename ................ None
  retriever_report_topk_accuracies ................ []
  retriever_score_scaling ......................... False
  retriever_seq_length ............................ 256
  retro_add_retriever ............................. False
  retro_attention_gate ............................ 1
  retro_cyclic_train_iters ........................ None
  retro_encoder_attention_dropout ................. 0.1
  retro_encoder_hidden_dropout .................... 0.1
  retro_encoder_layers ............................ 2
  retro_num_neighbors ............................. 2
  retro_num_retrieved_chunks ...................... 2
  retro_project_dir ............................... None
  retro_verify_neighbor_count ..................... True
  rope_scaling_factor ............................. 8.0
  rotary_base ..................................... 10000
  rotary_interleaved .............................. False
  rotary_percent .................................. 1.0
  rotary_scaling_factor ........................... 1.0
  rotary_seq_len_interpolation_factor ............. None
  run_workload_inspector_server ................... False
  sample_rate ..................................... 1.0
  save ............................................ None
  save_interval ................................... 1000
  scatter_gather_tensors_in_pipeline .............. True
  seed ............................................ 1234
  seq_length ...................................... 1024
  sequence_parallel ............................... False
  sgd_momentum .................................... 0.9
  short_seq_prob .................................. 0.1
  skip_train ...................................... False
  skipped_train_samples ........................... 0
  spec ............................................ None
  split ........................................... None
  squared_relu .................................... False
  start_weight_decay .............................. 0.01
  straggler_ctrlr_port ............................ 65535
  straggler_minmax_count .......................... 1
  suggested_communication_unit_size ............... None
  swiglu .......................................... False
  swin_backbone_type .............................. tiny
  te_rng_tracker .................................. False
  tensor_model_parallel_size ...................... 4
  tensorboard_dir ................................. None
  tensorboard_log_interval ........................ 1
  tensorboard_queue_size .......................... 1000
  test_data_path .................................. None
  test_mode ....................................... False
  tiktoken_num_special_tokens ..................... 1000
  tiktoken_pattern ................................ None
  tiktoken_special_tokens ......................... None
  timing_log_level ................................ 0
  timing_log_option ............................... minmax
  titles_data_path ................................ None
  tokenizer_model ................................. None
  tokenizer_type .................................. GPT2BPETokenizer
  torch_fsdp2_reshard_after_forward ............... True
  tp_comm_bootstrap_backend ....................... nccl
  tp_comm_bulk_dgrad .............................. True
  tp_comm_bulk_wgrad .............................. True
  tp_comm_overlap ................................. False
  tp_comm_overlap_ag .............................. True
  tp_comm_overlap_cfg ............................. None
  tp_comm_overlap_rs .............................. True
  tp_comm_overlap_rs_dgrad ........................ False
  tp_comm_split_ag ................................ True
  tp_comm_split_rs ................................ True
  train_data_path ................................. None
  train_iters ..................................... 1
  train_samples ................................... None
  train_sync_interval ............................. None
  transformer_impl ................................ local
  transformer_pipeline_model_parallel_size ........ 6
  untie_embeddings_and_output_weights ............. False
  use_checkpoint_args ............................. False
  use_checkpoint_opt_param_scheduler .............. False
  use_cpu_initialization .......................... True
  use_custom_fsdp ................................. False
  use_dist_ckpt ................................... True
  use_dist_ckpt_deprecated ........................ False
  use_distributed_optimizer ....................... False
  use_flash_attn .................................. False
  use_legacy_models ............................... False
  use_mp_args_from_checkpoint_args ................ False
  use_one_sent_docs ............................... False
  use_persistent_ckpt_worker ...................... False
  use_precision_aware_optimizer ................... False
  use_pytorch_profiler ............................ False
  use_ring_exchange_p2p ........................... False
  use_rope_scaling ................................ False
  use_rotary_position_embeddings .................. False
  use_tokenizer_model_from_checkpoint_args ........ True
  use_torch_fsdp2 ................................. False
  use_torch_optimizer_for_cpu_offload ............. False
  use_tp_pp_dp_mapping ............................ False
  v_head_dim ...................................... 128
  valid_data_path ................................. None
  variable_seq_lengths ............................ False
  virtual_pipeline_model_parallel_size ............ None
  vision_backbone_type ............................ vit
  vision_pretraining .............................. False
  vision_pretraining_type ......................... classify
  vocab_extra_ids ................................. 0
  vocab_file ...................................... dummy_vocab.json
  vocab_size ...................................... None
  wandb_exp_name .................................. 
  wandb_project ................................... 
  wandb_save_dir .................................. 
  weight_decay .................................... 0.01
  weight_decay_incr_style ......................... constant
  wgrad_deferral_limit ............................ 0
  world_size ...................................... 48
  yaml_cfg ........................................ None
-------------------- end of arguments ---------------------
INFO:megatron.core.num_microbatches_calculator:setting number of microbatches to constant 4
> building GPT2BPETokenizer tokenizer ...
 > padded vocab (size: 1) with 201027 dummy tokens (new size: 201028)
WARNING:megatron.core.rerun_state_machine:RerunStateMachine initialized in mode RerunMode.DISABLED
torch distributed is already initialized, skipping initialization ...
> initialized tensor model parallel with size 4
> initialized pipeline model parallel with size 6
> setting random seeds to 1234 ...
> skipping C++ helper and fused kernel compilation in no-CUDA mode.
time to initialize megatron (seconds): 3.720
[after megatron is initialized] datetime: 2025-08-10 18:55:43 
use_te: False
building GPT model ...
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
 > number of parameters on (tensor, pipeline) model parallel rank (0, 0): 42934656
INFO:megatron.core.distributed.distributed_data_parallel:Setting up DistributedDataParallel with config DistributedDataParallelConfig(grad_reduce_in_fp32=False, overlap_grad_reduce=False, overlap_param_gather=False, align_param_gather=False, use_distributed_optimizer=False, num_distributed_optimizer_instances=1, check_for_nan_in_grad=True, check_for_large_grads=False, bucket_size=None, pad_buckets_for_high_nccl_busbw=False, average_in_collective=False, fp8_param_gather=False, use_custom_fsdp=False, data_parallel_sharding_strategy='no_shard', gradient_reduce_div_fusion=True, suggested_communication_unit_size=None, preserve_fp32_weights=True, keep_fp8_transpose_cache_when_using_custom_fsdp=False)
INFO:megatron.core.distributed.param_and_grad_buffer:Number of buckets for gradient all-reduce / reduce-scatter: 1
Params for bucket 1 (42934656 elements, 42934656 padded size):
	decoder.layers.1.input_layernorm.layer_norm.bias
	decoder.layers.1.pre_mlp_layernorm.layer_norm.weight
	decoder.layers.1.self_attention.linear_proj.bias
	decoder.layers.0.pre_mlp_layernorm.layer_norm.bias
	decoder.layers.1.mlp.linear_fc2.weight
	decoder.layers.1.self_attention.linear_qkv.weight
	decoder.layers.0.mlp.linear_fc2.weight
	decoder.layers.0.mlp.linear_fc1.weight
	decoder.layers.0.input_layernorm.layer_norm.weight
	embedding.position_embeddings.weight
	decoder.layers.0.mlp.linear_fc2.bias
	decoder.layers.0.self_attention.linear_qkv.bias
	decoder.layers.0.self_attention.linear_qkv.weight
	embedding.word_embeddings.weight
	decoder.layers.1.mlp.linear_fc1.bias
	decoder.layers.1.pre_mlp_layernorm.layer_norm.bias
	decoder.layers.0.self_attention.linear_proj.weight
	decoder.layers.1.self_attention.linear_qkv.bias
	decoder.layers.0.mlp.linear_fc1.bias
	decoder.layers.1.mlp.linear_fc2.bias
	decoder.layers.1.input_layernorm.layer_norm.weight
	decoder.layers.0.pre_mlp_layernorm.layer_norm.weight
	decoder.layers.1.mlp.linear_fc1.weight
	decoder.layers.1.self_attention.linear_proj.weight
	decoder.layers.0.self_attention.linear_proj.bias
	decoder.layers.0.input_layernorm.layer_norm.bias
INFO:megatron.core.optimizer:Setting up optimizer with config OptimizerConfig(optimizer='adam', lr=0.0001, min_lr=1e-05, decoupled_lr=None, decoupled_min_lr=None, weight_decay=0.01, fp16=False, bf16=False, params_dtype=torch.float32, use_precision_aware_optimizer=False, store_param_remainders=True, main_grads_dtype=torch.float32, main_params_dtype=torch.float32, exp_avg_dtype=torch.float32, exp_avg_sq_dtype=torch.float32, loss_scale=None, initial_loss_scale=4294967296, min_loss_scale=1.0, loss_scale_window=1000, hysteresis=2, adam_beta1=0.9, adam_beta2=0.999, adam_eps=1e-08, sgd_momentum=0.9, use_distributed_optimizer=False, overlap_param_gather_with_optimizer_step=False, optimizer_cpu_offload=False, optimizer_offload_fraction=1.0, use_torch_optimizer_for_cpu_offload=False, overlap_cpu_optimizer_d2h_h2d=False, pin_cpu_grads=True, pin_cpu_params=True, clip_grad=1.0, log_num_zeros_in_grad=False, barrier_with_L1_time=True, timers=<megatron.core.timers.Timers object at 0x11b672e70>, config_logger_dir='')
INFO:megatron.core.optimizer_param_scheduler:> learning rate decay style: cosine
[after model, optimizer, and learning rate scheduler are built] datetime: 2025-08-10 18:55:43 
> building train, validation, and test datasets ...
 > datasets target sizes (minimum size):
    train:      1024
    validation: 102400
    test:       102400
INFO:megatron.core.datasets.blended_megatron_dataset_config:Let mock = True, as both blend and blend_per_split are None
INFO:megatron.core.datasets.blended_megatron_dataset_config:Let split = 1,1,1, an arbitrarily even split, as mock is True
INFO:megatron.core.datasets.blended_megatron_dataset_config:Let split_matrix = [(0, 0.3333333333333333), (0.3333333333333333, 0.6666666666666666), (0.6666666666666666, 1.0)]
> building train, validation, and test datasets for GPT ...
INFO:megatron.core.datasets.blended_megatron_dataset_builder:Building MockGPTDataset splits with sizes=(1024, 102400, 102400) and config=GPTDatasetConfig(random_seed=1234, sequence_length=1024, blend=None, blend_per_split=None, split='1,1,1', split_matrix=[(0, 0.3333333333333333), (0.3333333333333333, 0.6666666666666666), (0.6666666666666666, 1.0)], num_dataset_builder_threads=1, path_to_cache=None, mmap_bin_files=True, mock=True, tokenizer=<megatron.training.tokenizer.tokenizer._GPT2BPETokenizer object at 0x11cec9f10>, mid_level_dataset_surplus=0.005, reset_position_ids=False, reset_attention_mask=False, eod_mask_loss=False, create_attention_mask=True, drop_last_partial_validation_sequence=True, add_extra_token_to_sequence=True, object_storage_cache_path=None)
INFO:megatron.core.datasets.gpt_dataset:Build and save the MockGPTDataset train indices
WARNING:megatron.core.datasets.gpt_dataset:Skipping C++ helpers for mock data. Creating dummy sample/shuffle indices.
INFO:megatron.core.datasets.gpt_dataset:Creating dummy indices for 1024 mock samples.
WARNING:megatron.core.datasets.gpt_dataset:Unable to save MockGPTDataset indexes because path_to_cache is None
INFO:megatron.core.datasets.gpt_dataset:> total number of samples: 1024
INFO:megatron.core.datasets.gpt_dataset:> total number of epochs: 1
INFO:megatron.core.datasets.gpt_dataset:Build and save the MockGPTDataset valid indices
WARNING:megatron.core.datasets.gpt_dataset:Skipping C++ helpers for mock data. Creating dummy sample/shuffle indices.
INFO:megatron.core.datasets.gpt_dataset:Creating dummy indices for 102400 mock samples.
WARNING:megatron.core.datasets.gpt_dataset:Unable to save MockGPTDataset indexes because path_to_cache is None
INFO:megatron.core.datasets.gpt_dataset:> total number of samples: 102400
INFO:megatron.core.datasets.gpt_dataset:> total number of epochs: 2
INFO:megatron.core.datasets.gpt_dataset:Build and save the MockGPTDataset test indices
WARNING:megatron.core.datasets.gpt_dataset:Skipping C++ helpers for mock data. Creating dummy sample/shuffle indices.
INFO:megatron.core.datasets.gpt_dataset:Creating dummy indices for 102400 mock samples.
WARNING:megatron.core.datasets.gpt_dataset:Unable to save MockGPTDataset indexes because path_to_cache is None
INFO:megatron.core.datasets.gpt_dataset:> total number of samples: 102400
INFO:megatron.core.datasets.gpt_dataset:> total number of epochs: 2
> finished creating GPT datasets ...
/Users/sundararajanrenganathan/micromamba/envs/chronos/lib/python3.12/site-packages/torch/utils/data/dataloader.py:683: UserWarning: 'pin_memory' argument is set as true but not supported on MPS now, then device pinned memory won't be used.
  warnings.warn(warn_msg)
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (2, 5): 42148224
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (1, 0): 42934656
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (2, 0): 42934656
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (3, 0): 42934656
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Rank 42: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_42.json
Patched Megatron's transformer_engine version checks
Rank 1: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_1.json
Patched Megatron's transformer_engine version checks
Rank 2: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_2.json
Patched Megatron's transformer_engine version checks
Rank 3: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_3.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 7: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_7.json
Patched Megatron's transformer_engine version checks
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/micromamba/envs/chronos/lib/python3.12/site-packages/torch/utils/data/dataloader.py:683: UserWarning: 'pin_memory' argument is set as true but not supported on MPS now, then device pinned memory won't be used.
  warnings.warn(warn_msg)
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 31: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_31.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 39: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_39.json
Patched Megatron's transformer_engine version checks
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/micromamba/envs/chronos/lib/python3.12/site-packages/torch/utils/data/dataloader.py:683: UserWarning: 'pin_memory' argument is set as true but not supported on MPS now, then device pinned memory won't be used.
  warnings.warn(warn_msg)
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (0, 4): 3550848
INFO:megatron.core.distributed.param_and_grad_buffer:Number of buckets for gradient all-reduce / reduce-scatter: 1
Params for bucket 1 (3550848 elements, 3550848 padded size):
	decoder.layers.1.self_attention.linear_qkv.bias
	decoder.layers.1.pre_mlp_layernorm.layer_norm.bias
	decoder.layers.1.mlp.linear_fc1.weight
	decoder.layers.0.mlp.linear_fc1.bias
	decoder.layers.1.input_layernorm.layer_norm.bias
	decoder.layers.0.pre_mlp_layernorm.layer_norm.weight
	decoder.layers.0.mlp.linear_fc2.bias
	decoder.layers.0.self_attention.linear_proj.weight
	decoder.layers.1.self_attention.linear_proj.weight
	decoder.layers.0.self_attention.linear_qkv.weight
	decoder.layers.0.input_layernorm.layer_norm.weight
	decoder.layers.0.self_attention.linear_qkv.bias
	decoder.layers.1.mlp.linear_fc1.bias
	decoder.layers.1.input_layernorm.layer_norm.weight
	decoder.layers.1.mlp.linear_fc2.weight
	decoder.layers.1.self_attention.linear_qkv.weight
	decoder.layers.1.self_attention.linear_proj.bias
	decoder.layers.0.pre_mlp_layernorm.layer_norm.bias
	decoder.layers.0.input_layernorm.layer_norm.bias
	decoder.layers.1.mlp.linear_fc2.bias
	decoder.layers.1.pre_mlp_layernorm.layer_norm.weight
	decoder.layers.0.mlp.linear_fc2.weight
	decoder.layers.0.mlp.linear_fc1.weight
	decoder.layers.0.self_attention.linear_proj.bias
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (3, 5): 42148224
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 5: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_5.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 37: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_37.json
Patched Megatron's transformer_engine version checks
Rank 32: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_32.json
Patched Megatron's transformer_engine version checks
Rank 43: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_43.json
Patched Megatron's transformer_engine version checks
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (0, 1): 3550848
INFO:megatron.core.distributed.param_and_grad_buffer:Number of buckets for gradient all-reduce / reduce-scatter: 1
Params for bucket 1 (3550848 elements, 3550848 padded size):
	decoder.layers.1.mlp.linear_fc1.bias
	decoder.layers.0.pre_mlp_layernorm.layer_norm.weight
	decoder.layers.1.self_attention.linear_proj.bias
	decoder.layers.1.input_layernorm.layer_norm.weight
	decoder.layers.0.self_attention.linear_qkv.bias
	decoder.layers.0.mlp.linear_fc2.weight
	decoder.layers.0.mlp.linear_fc1.weight
	decoder.layers.0.self_attention.linear_qkv.weight
	decoder.layers.0.input_layernorm.layer_norm.weight
	decoder.layers.1.self_attention.linear_proj.weight
	decoder.layers.1.self_attention.linear_qkv.bias
	decoder.layers.0.mlp.linear_fc1.bias
	decoder.layers.0.input_layernorm.layer_norm.bias
	decoder.layers.1.mlp.linear_fc2.bias
	decoder.layers.1.pre_mlp_layernorm.layer_norm.bias
	decoder.layers.1.mlp.linear_fc1.weight
	decoder.layers.0.self_attention.linear_proj.bias
	decoder.layers.1.pre_mlp_layernorm.layer_norm.weight
	decoder.layers.1.input_layernorm.layer_norm.bias
	decoder.layers.0.mlp.linear_fc2.bias
	decoder.layers.0.pre_mlp_layernorm.layer_norm.bias
	decoder.layers.1.mlp.linear_fc2.weight
	decoder.layers.1.self_attention.linear_qkv.weight
	decoder.layers.0.self_attention.linear_proj.weight
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (2, 1): 3550848
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (2, 3): 3550848
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Rank 10: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_10.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 21: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_21.json
Patched Megatron's transformer_engine version checks
Rank 8: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_8.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 20: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_20.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 22: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_22.json
Patched Megatron's transformer_engine version checks
Rank 26: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_26.json
Patched Megatron's transformer_engine version checks
W0810 18:55:45.475000 88813 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 6: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_6.json
Patched Megatron's transformer_engine version checks
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (1, 1): 3550848
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
WARNING: one_logger package is required to enable e2e metrics tracking. please go to https://confluence.nvidia.com/display/MLWFO/Package+Repositories for details to install it
use_te: False
Rank 47: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_47.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (3, 2): 3550848
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (0, 3): 3550848
INFO:megatron.core.distributed.param_and_grad_buffer:Number of buckets for gradient all-reduce / reduce-scatter: 1
Params for bucket 1 (3550848 elements, 3550848 padded size):
	decoder.layers.0.self_attention.linear_qkv.bias
	decoder.layers.1.input_layernorm.layer_norm.weight
	decoder.layers.0.pre_mlp_layernorm.layer_norm.bias
	decoder.layers.1.mlp.linear_fc1.bias
	decoder.layers.1.pre_mlp_layernorm.layer_norm.weight
	decoder.layers.0.mlp.linear_fc2.weight
	decoder.layers.0.mlp.linear_fc1.weight
	decoder.layers.0.self_attention.linear_qkv.weight
	decoder.layers.1.mlp.linear_fc2.weight
	decoder.layers.1.self_attention.linear_proj.bias
	decoder.layers.1.self_attention.linear_proj.weight
	decoder.layers.0.input_layernorm.layer_norm.weight
	decoder.layers.1.mlp.linear_fc2.bias
	decoder.layers.1.pre_mlp_layernorm.layer_norm.bias
	decoder.layers.0.mlp.linear_fc1.bias
	decoder.layers.0.self_attention.linear_proj.weight
	decoder.layers.1.self_attention.linear_qkv.bias
	decoder.layers.1.self_attention.linear_qkv.weight
	decoder.layers.1.input_layernorm.layer_norm.bias
	decoder.layers.1.mlp.linear_fc1.weight
	decoder.layers.0.mlp.linear_fc2.bias
	decoder.layers.0.pre_mlp_layernorm.layer_norm.weight
	decoder.layers.0.self_attention.linear_proj.bias
	decoder.layers.0.input_layernorm.layer_norm.bias
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (1, 3): 3550848
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (3, 3): 3550848
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Rank 9: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_9.json
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (3, 4): 3550848
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
W0810 18:55:46.193000 88814 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (1, 5): 42148224
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 12: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_12.json
Patched Megatron's transformer_engine version checks
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (3, 1): 3550848
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (1, 2): 3550848
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (0, 2): 3550848
INFO:megatron.core.distributed.param_and_grad_buffer:Number of buckets for gradient all-reduce / reduce-scatter: 1
Params for bucket 1 (3550848 elements, 3550848 padded size):
	decoder.layers.1.pre_mlp_layernorm.layer_norm.weight
	decoder.layers.0.pre_mlp_layernorm.layer_norm.weight
	decoder.layers.0.self_attention.linear_proj.bias
	decoder.layers.1.mlp.linear_fc1.bias
	decoder.layers.1.input_layernorm.layer_norm.bias
	decoder.layers.0.input_layernorm.layer_norm.bias
	decoder.layers.1.mlp.linear_fc2.weight
	decoder.layers.1.pre_mlp_layernorm.layer_norm.bias
	decoder.layers.1.self_attention.linear_qkv.bias
	decoder.layers.1.self_attention.linear_qkv.weight
	decoder.layers.0.mlp.linear_fc2.weight
	decoder.layers.0.mlp.linear_fc1.weight
	decoder.layers.1.mlp.linear_fc2.bias
	decoder.layers.1.mlp.linear_fc1.weight
	decoder.layers.1.input_layernorm.layer_norm.weight
	decoder.layers.0.mlp.linear_fc1.bias
	decoder.layers.0.self_attention.linear_qkv.bias
	decoder.layers.1.self_attention.linear_proj.bias
	decoder.layers.1.self_attention.linear_proj.weight
	decoder.layers.0.self_attention.linear_proj.weight
	decoder.layers.0.mlp.linear_fc2.bias
	decoder.layers.0.pre_mlp_layernorm.layer_norm.bias
	decoder.layers.0.self_attention.linear_qkv.weight
	decoder.layers.0.input_layernorm.layer_norm.weight
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 15: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_15.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (2, 2): 3550848
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Rank 24: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_24.json
Patched Megatron's transformer_engine version checks
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (2, 4): 3550848
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (1, 4): 3550848
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/models/gpt/gpt_layer_specs.py:205: UserWarning: The fp8 argument in "get_gpt_layer_local_spec" has been deprecated and will be removed soon. Please update your code accordingly.
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
 > number of parameters on (tensor, pipeline) model parallel rank (0, 5): 42148224
INFO:megatron.core.distributed.param_and_grad_buffer:Number of buckets for gradient all-reduce / reduce-scatter: 1
Params for bucket 1 (42148224 elements, 42148224 padded size):
	decoder.layers.1.pre_mlp_layernorm.layer_norm.bias
	decoder.layers.0.mlp.linear_fc2.weight
	decoder.layers.0.pre_mlp_layernorm.layer_norm.bias
	decoder.layers.0.self_attention.linear_qkv.weight
	output_layer.weight
	decoder.layers.1.self_attention.linear_qkv.bias
	decoder.layers.1.input_layernorm.layer_norm.bias
	decoder.layers.1.mlp.linear_fc2.weight
	decoder.layers.1.mlp.linear_fc1.weight
	decoder.layers.1.pre_mlp_layernorm.layer_norm.weight
	decoder.layers.1.self_attention.linear_qkv.weight
	decoder.layers.0.mlp.linear_fc1.bias
	decoder.layers.0.mlp.linear_fc1.weight
	decoder.layers.1.mlp.linear_fc1.bias
	decoder.layers.1.self_attention.linear_proj.bias
	decoder.layers.0.self_attention.linear_qkv.bias
	decoder.layers.1.input_layernorm.layer_norm.weight
	decoder.layers.0.mlp.linear_fc2.bias
	decoder.layers.0.self_attention.linear_proj.weight
	decoder.layers.1.mlp.linear_fc2.bias
	decoder.layers.1.self_attention.linear_proj.weight
	decoder.layers.0.self_attention.linear_proj.bias
	decoder.layers.0.input_layernorm.layer_norm.weight
	decoder.layers.0.pre_mlp_layernorm.layer_norm.weight
	decoder.layers.0.input_layernorm.layer_norm.bias
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
/Users/sundararajanrenganathan/micromamba/envs/chronos/lib/python3.12/site-packages/torch/utils/data/dataloader.py:683: UserWarning: 'pin_memory' argument is set as true but not supported on MPS now, then device pinned memory won't be used.
  warnings.warn(warn_msg)
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
Rank 27: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_27.json
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 14: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_14.json
Rank 35: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_35.json
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 23: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_23.json
Patched Megatron's transformer_engine version checks
Rank 25: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_25.json
Patched Megatron's transformer_engine version checks
Rank 19: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_19.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 38: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_38.json
Patched Megatron's transformer_engine version checks
Rank 41: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_41.json
Rank 17: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_17.json
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 13: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_13.json
Patched Megatron's transformer_engine version checks
Rank 33: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_33.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 28: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_28.json
Rank 11: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_11.json
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Rank 16: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_16.json
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 46: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_46.json
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Rank 18: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_18.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 30: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_30.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 29: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_29.json
Patched Megatron's transformer_engine version checks
Rank 34: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_34.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 36: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_36.json
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Running in CPU-only mode with meta tensors because allow_no_cuda=True
use_te: False
Rank 45: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_45.json
Patched Megatron's transformer_engine version checks
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
W0810 18:55:47.142000 88815 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
W0810 18:55:48.909000 88819 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:48.988000 88820 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
W0810 18:55:49.458000 88822 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:49.653000 88826 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
W0810 18:55:50.532000 88827 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:50.604000 88828 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
W0810 18:55:51.011000 88831 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
W0810 18:55:51.283000 88834 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
W0810 18:55:52.152000 88837 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:52.238000 88840 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
W0810 18:55:52.651000 88841 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
W0810 18:55:52.912000 88842 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
W0810 18:55:53.794000 88847 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:53.913000 88848 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
W0810 18:55:54.432000 88851 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:54.797000 88854 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
W0810 18:55:55.619000 88858 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
W0810 18:55:55.765000 88861 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
[after dataloaders are built] datetime: 2025-08-10 18:55:56 
done with setup ...
training ...
Setting rerun_state_machine.current_iteration to 0...
[before the start of training step] datetime: 2025-08-10 18:55:56 
W0810 18:55:56.260000 88862 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
[after training is done] datetime: 2025-08-10 18:55:56 
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
W0810 18:55:56.605000 88863 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
W0810 18:55:57.341000 88864 site-packages/torch/distributed/elastic/multiprocessing/redirects.py:29] NOTE: Redirects are currently not supported in Windows or MacOs.
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/training/utils.py:24: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_l2norm
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/__init__.py:28: UserWarning: Transformer Engine and Apex are not installed. Falling back to Torch optimizers.
  warnings.warn(f"Transformer Engine and Apex are not installed. Falling back to Torch optimizers.")
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/optimizer.py:31: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/optimizer/clip_grads.py:48: UserWarning: Transformer Engine and Apex are not installed. Falling back to local implementations of multi_tensor_applier, multi_tensor_l2norm, and multi_tensor_scale
  warnings.warn(
/Users/sundararajanrenganathan/Research/ai-interconnects/presched/Megatron-LM/megatron/core/tensor_parallel/layers.py:710: UserWarning: When using async grad allreduce it is recommended to set the environment variable CUDA_DEVICE_MAX_CONNECTIONS to 1 for maximum speedup
  warnings.warn(
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Module 'triton' not found, using mock implementation
Module 'apex' not found, using mock implementation
Module 'transformer_engine' not found, using mock implementation
Module 'flash_attn' not found, using mock implementation
Patched torch.jit to be passthrough decorators
Patched torch.compile to be a no-op
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
megatron.core.parallel_state not found for class patch.
Error patching tensor_parallel.random initialize_rng_tracker: module 'megatron' has no attribute 'core'
Applying meta tensor patches to PyTorch
Meta tensor patches applied successfully
Applied distributed communication patches
Applied additional compatibility patches
All instrumentation patches applied successfully
Patched transformer_engine classes for inheritance
Mocked multi_tensor_applier for meta tensors
Patched importlib.metadata.version for transformer-engine
Patched is_te_min_version to always return True
Patched get_te_version to return a Version object
Using mocked transformer_engine module. Creating minimal implementation...
Patched Megatron's transformer_engine version checks
Patched Megatron's transformer_engine version checks
Rank 0: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_0.json
Patched Megatron's transformer_engine version checks
Rank 44: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_44.json
Patched Megatron's transformer_engine version checks
Rank 4: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_4.json
Patched Megatron's transformer_engine version checks
Rank 40: Saved logs to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529/comm_log_rank_40.json
Patched Megatron's transformer_engine version checks
Distributed logging completed. Results saved to comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529
Communication trace completed successfully.
Logs saved to: comm_logs/small_dp2_tp4_pp6_cp1_20250810_185529
Patched Megatron's transformer_engine version checks
